#!/bin/python3

# Olivier Bonaventure, 2019

from inginious import input, feedback

def sanitize(string):
        
        return string.lower().strip()

def check(question,answer,correct,comment):
   if(not answer.startswith('nexthop') and
      not answer.startswith('interface') ):
      feedback.set_problem_result("failed",question)
      feedback.set_problem_feedback("Your answer must be an interface or a nexthop.",question)
      return 0
   if(answer==correct):
      feedback.set_problem_result("success",question)
      feedback.set_problem_feedback("Correct",question)
      return 10
   else:
      feedback.set_problem_result("failed",question)
      feedback.set_problem_feedback("Incorrect. "+comment,question)     

   return 0   
      
grade=0
# addr 2001:bad:cafe::1234
a1=sanitize(input.get_input("q1"))
grade+=check("q1",a1,"nexthop0","This destination address matches the default route")

# addr 2001:DB8:1342:5555::1
a2=sanitize(input.get_input("q2"))
grade+=check("q2",a2,"nexthop4","This destination address matches 2001:db8::/32")

# addr 2001:DB8:1341:3000::1234
a3=sanitize(input.get_input("q3"))
grade+=check("q3",a3,"nexthop5","This destination address matches 2001:db8::1341:2000/51. Remember the binary representation of this address.")

# addr 2001:DB8:1341:6000::cafe:beef
a4=sanitize(input.get_input("q4"))
grade+=check("q4",a4,"nexthop2","This destination address matches 2001:db8::1341:4000/50. Remember the binary representation of this address.")

# addr 2001:DB8:1341:5000::f00f:beef
a5=sanitize(input.get_input("q5"))
grade+=check("q5",a5,"nexthop3","This destination address matches 2001:db8::1341:5000/52. Remember the binary representation of this address.")







feedback.set_grade(100*grade/50) 

if grade>=40:
	feedback.set_global_result("success")
else:
	feedback.set_global_result("failed")
#end
    
