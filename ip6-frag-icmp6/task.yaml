accessible: true
author: Olivier Bonaventure
categories:
- ipv6
contact_url: ''
context: |-
    IPv6, described in the `IPv6 chapter <http://cnp3book.info.ucl.ac.be/2nd/html/protocols/ipv6.html>`_ of `Computer Networking: Principles, Protocols and Practice <http://cnp3book.info.ucl.ac.be/>`_ includes a packet fragmentation mechanism that allows to send large packets as a series of fragments.

    .. raw:: html

       <script defer>
       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: bodyHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           document.querySelector('#content').style.minHeight = '';
           setTimeout(postSize, 0);
       });
       </script>
environment_id: mcq
environment_parameters: {}
environment_type: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
name: 'IPv6 : packet fragmentation, a simple example'
network_grading: false
order: 42
problems:
    test:
        type: network-trace
        name: Reorder the fragments
        header: Can you reorder the packet packet fragments that were captured while
            a host was using `ping6` to verify the reachability of destination `2001:7ab:2::b`
            with packets that are longer than the MTU ? This packet was sent by a
            Linux host that sends the first fragment of the packet last.
        trace: ip6-frag-9-10.pcap.xml
        exclude: {}
        redact: {}
        hide: {}
        feedback: {}
        shuffle: true
        shuffle-feedback: |-
            The IPv6 Fragment Header is defined in `Section 4.5 <https://tools.ietf.org/html/rfc8200#section-4.5>`_ of `RFC8200 <https://tools.ietf.org/html/rfc8200>`_. It contains three important fields :
             - the Identification field (all fragments of a packet contain the same identification)
             - the Offset (for technical reasons, the packet dissector shows it as a low order byte and a high order byte values)
             - the More flag (which is set to 1 in all fragments except the last one)
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
