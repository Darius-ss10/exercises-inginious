accessible: true
author: Olivier Bonaventure
categories:
- bgp
contact_url: ''
context: |-
    .. raw:: html

       <script defer>
       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: bodyHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           document.querySelector('#content').style.minHeight = '';
           setTimeout(postSize, 0);
       });
       </script>
environment_id: pyjavacpp
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: '0'
name: The BGP decision process
network_grading: false
problems:
    q1:
        type: code_single_line
        name: The BGP decision process
        header: |
            The BGP decision process is the process that is used by a BGP router to select the best path among all the paths learned towards a given destination prefix. The table below represents all the BGP routes learned by a BGP router and their  corresponding attributes. For simplicity, the nexthops are indicated as router names instead of IP addresses.

               ================  ===========    ==========    =======
               prefix            AS Path        local-pref    nexthop
               ----------------  -----------    ----------    -------
               2001:db8:1::/48   AS1:AS4        100           R1
               2001:db8:1::/48   AS1:AS3:AS4    200           R2
               2001:db8:1::/48   AS1:AS4        100           R3
               2001:db8:1::/48   AS4            150           R4
               2001:db8:2::/48   AS1:AS4        100           R1
               2001:db8:2::/48   AS1:AS3:AS4    100           R2
               2001:db8:2::/48   AS1:AS4        100           R3
               2001:db8:2::/48   AS4            150           R4
               2001:db8:0::/47   AS1:AS4        200           R1
               2001:db8:0::/47   AS1:AS3:AS4    200           R2
               2001:db8:0::/47   AS1:AS4        100           R3
               2001:db8:0::/47   AS4            150           R4
               2001:db8:0::/48   AS1:AS4        100           R1
               2001:db8:0::/48   AS1:AS3:AS4    100           R2
               2001:db8:0::/48   AS1:AS4        150           R3
               2001:db8:0::/48   AS4            150           R4
               ================  ===========    ==========    =======


            What is the next hop that this router will prefer for prefix ``2001:db8:1::/48`` ?
        optional: 'on'
        default: ''
    q2:
        type: code_single_line
        name: Best route
        header: |4-

            What is the next hop that this router will prefer for prefix ``2001:db8:2::/48`` ?
        optional: 'on'
        default: ''
    q3:
        type: code_single_line
        name: Best route
        header: |4-

            What is the next hop that this router will prefer for prefix ``2001:db8:0::/48`` ?
        optional: 'on'
        default: ''
    q4:
        type: code_single_line
        name: Best route
        header: |4-

            What is the next hop that this router will prefer for prefix ``2001:db8:0::/47`` ?
        optional: 'on'
        default: ''
    q5:
        type: code_single_line
        name: Route for a specific packet
        header: 'What is the next hop that this router will use to forward a packet
            whose destination address is ``2001:db8:0::1234`` ? '
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
