accessible: true
author: Olivier Bonaventure
categories:
- telnet
contact_url: ''
context: |-
    .. raw:: html

       <script defer>
       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: bodyHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           document.querySelector('#content').style.minHeight = '';
           setTimeout(postSize, 1000);
       });
       </script>
environment_id: pyjavacpp
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: 0
name: A first look at telnet
network_grading: false
problems:
    q1:
        type: code_single_line
        name: The username
        header: What is the username that the client used to log on this server ?
        default: ''
    q2:
        type: code_single_line
        name: The password
        header: What is the password that the client used to log on this server ?
        default: ''
    trace:
        type: network-trace
        name: Telnet trace
        header: |4-
             This `packet trace <https://inginious.org/course/cnp3/q-pkt-telnet/telnet.pcap>`_ was collected on a server while a client was connecting to the telnet service. Telnet supports remote logins and basically a telnet session is a TCP connection where:

             - the keys typed by the client are sent as ASCII characters
             - the server output is sent as ASCII characters

             Looking at the trace below or using `wireshark <https://www.wireshark.org>`_, can you extract some information ? Note that the 20 bytes packets that you see below are pure TCP acknowledgements that do not carry any data.
        trace: telnet.xml
        exclude:
        - tcp.flags
        - tcp.options
        redact: {}
        hide: {}
        feedback: {}
        shuffle-feedback: ''
        shuffle: false
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
